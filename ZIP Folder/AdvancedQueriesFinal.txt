/**
5a - Provide a list of buyer names, along with the total dollar amount each buyer has spent in the last year.
**/
SELECT		U.First_Name, U.Last_Name, SUM(IP.Price)
	FROM		USER AS U, ITEM_ORDER AS IO, ITEM_ADDED_TO_ORDER AS IATO, IP_ITEM AS IP
		WHERE		U.Buyer_Flag == 0
		AND			U.User_ID == IO.User_ID
		AND			IO.Order_ID == IATO.Order_ID
		AND			IATO.IP_Item_ID == IP.IP_Item_ID
	GROUP BY	U.User_ID;

/**
5b - Provide a list of buyer names and e-mail addresses for buyers who have spent more than the average buyer.
**/
SELECT	U.First_Name, U.Last_Name, U.Email
	FROM	USER AS U, ITEM_ORDER AS IO, ITEM_ADDED_TO_ORDER AS IATO, IP_ITEM AS IP
		WHERE	U.User_ID == IO.User_ID
		AND		IO.Order_ID == IATO.Order_ID
		AND		IATO.IP_Item_ID == IP.IP_Item_ID
	GROUP BY	U.User_ID
		HAVING	SUM(IP.Price) > (SELECT AVG(Total_Price)
		FROM	(SELECT SUM(IP.Price) AS Total_Price FROM USER AS U, ITEM_ORDER AS IO, ITEM_ADDED_TO_ORDER AS IATO, IP_ITEM AS IP
			WHERE	U.User_ID == IO.User_ID
			AND		IO.Order_ID == IATO.Order_ID
			AND		IATO.IP_Item_ID == IP.IP_Item_ID
		GROUP BY	U.User_ID));

/**
5c - Provide a list of the IP Item names and associated total copies sold to all buyers, sorted from the IP Item that has sold the most individual copies to the IP Item that has sold the least.
**/
SELECT	IP.Title, COUNT(IP.IP_Item_ID) as Total_Copies_Sold
	FROM	IP_ITEM AS IP, ITEM_ADDED_TO_ORDER AS IATO
		WHERE	IP.IP_Item_ID == IATO.IP_Item_ID
	GROUP BY	IP.IP_Item_ID
	ORDER BY	Total_Copies_Sold DESC;

/**
5d - Provide a list of the IP Item names and associated dollar totals for copies sold to all buyers, sorted from the IP Item that has sold the highest dollar amount to the IP Item that has sold the smallest.
**/
SELECT IP.Title, COUNT(IATO.IP_Item_ID) * IP.Price as Revenue
	FROM IP_ITEM AS IP, ITEM_ADDED_TO_ORDER AS IATO
		WHERE	IP.IP_Item_ID == IATO.IP_Item_ID
	GROUP BY	IP.IP_Item_ID
	ORDER BY 	Revenue DESC;

/**
5e - Find the most popular seller (i.e. the one who has sold the most IP Items).
**/
SELECT	U.First_Name, U.Last_Name, (SELECT MAX(IP_Item_ID) FROM ITEM_ADDED_TO_ORDER) as Most_Sold_Item_ID
	FROM	USER AS U, IP_ITEM AS IP, ITEM_ADDED_TO_ORDER AS IATO, VIRTUAL_STORE AS VS
		WHERE	IATO.IP_Item_ID == IP.IP_Item_ID
		AND		IP.Store_ID == VS.Store_ID
		AND 	VS.User_ID == U.User_ID
	GROUP BY 	IP.IP_Item_ID
	ORDER BY	Most_Sold_Item DESC;






/**
5d - Provide a list of the IP Item names and associated dollar totals for copies sold to all buyers, sorted from the IP Item that has sold the highest dollar amount to the IP Item that has sold the smallest.
**/
SELECT IP.Title, COUNT(IATO.IP_Item_ID) * IP.Price as Revenue
	FROM IP_ITEM AS IP, ITEM_ADDED_TO_ORDER AS IATO
		WHERE	IP.IP_Item_ID == IATO.IP_Item_ID
	GROUP BY	IP.IP_Item_ID
	ORDER BY 	Revenue DESC;

/**
5e - Find the most popular seller (i.e. the one who has sold the most IP Items)
**/
SELECT S.First_Name, S.Last_Name, MAX(items_sold)
FROM (SELECT S.First_Name, S.Last_Name, COUNT(IP_Item_ID) AS items_sold FROM ITEM_ADDED_TO_ORDER AS IATO, IP_ITEM AS IP, VIRTUAL_STORE AS VS, USER AS S
WHERE	IATO.IP_Item_ID = IP.IP_Item_ID
AND		IP.Store_ID = VS.Store_ID
AND 		VS.User_ID = S.User_ID
GROUP BY 	S.User_ID);

/*
5f
Find the most profitable seller (i.e. the one who has brought in the most money)
*/
SELECT S.First_Name, S.Last_Name, MAX(profit)
FROM (SELECT S.First_Name, S.Last_Name, SUM(IP.Price) AS profit FROM ITEM_ADDED_TO_ORDER AS IATO, IP_ITEM AS IP, VIRTUAL_STORE AS VS, USER AS S
WHERE	IATO.IP_Item_ID = IP.IP_Item_ID
AND		IP.Store_ID = VS.Store_ID
AND		VS.User_ID = S.User_ID
GROUP BY	S.User_ID);

/*
5g
Provide a list of buyer names for buyers who purchased anything listed by the most profitable seller.
*/
SELECT B.First_Name, B.Last_Name
FROM User as B
WHERE 	Order_ID IN 
SELECT S.User_ID, MAX(profit)
FROM (SELECT S.First_Name, S.Last_Name, SUM(IP.Price) AS profit FROM ITEM_ADDED_TO_ORDER AS IATO, IP_ITEM AS IP, VIRTUAL_STORE AS VS, USER AS S
WHERE	IATO.IP_Item_ID = IP.IP_Item_ID
AND		IP.Store_ID = VS.Store_ID
AND		VS.User_ID = S.User_ID
GROUP BY	S.User_ID);


/*
5h
Provide the list of sellers who listed the IP Items purchased by the buyers who have spent more than the average buyer.
*/


/*
5i
Provide sales statistics (number of items sold, highest price, lowest price, and average price) for each type of IP item offered by a particular store
*/
SELECT VS.Name, COUNT(IP.IP_Item_ID), MAX(IP.Price), MIN(IP.Price), AVG(IP.Price)
FROM VIRTUAL_STORE AS VS, IP_ITEM AS IP
WHERE 	VS.Store_ID = ‘4545’
AND 		VS.Store_ID = IP.Store_ID
