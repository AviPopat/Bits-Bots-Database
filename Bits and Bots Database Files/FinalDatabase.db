
CREATE TABLE USER
(	User_ID				INT				NOT NULL,
 	First_Name			VARCHAR(15)		NOT NULL,
 	Last_Name			VARCHAR(15)		NOT NULL,
 	Password			VARCHAR(15)		NOT NULL,
 	Buyer_Flag			TINYINT			NOT NULL,
 	Seller_Flag			TINYINT			NOT NULL,
 	Email				VARCHAR(15)		NOT NULL,
 	CONSTRAINT	UPK
 		PRIMARY KEY(User_ID));

CREATE TABLE IP_ITEM
(	IP_Item_ID			INT				NOT NULL,
	Store_ID			INT				NOT NULL,
	Title				VARCHAR(15)		NOT NULL,
	IP_Description		VARCHAR(15),
	Price				REAL			NOT NULL,
	File_Type			INT				NOT NULL,
	CONSTRAINT IIPK
		PRIMARY KEY(IP_Item_ID),
 	CONSTRAINT IISIFK
 		FOREIGN KEY(Store_ID) REFERENCES VIRTUAL_STORE(Store_ID));


 CREATE TABLE IP_ITEM_IMAGES
 (	Image_ID			INT				NOT NULL,
	IP_Item_ID			INT				NOT NULL,
	Image_Description	VARCHAR(15)		NOT NULL,
	Image_Name			VARCHAR(15)		NOT NULL,
	File_Type			VARCHAR(15)		NOT NULL,
	Upload_Date			DATE			NOT NULL,
	CONSTRAINT IIIPK
  		PRIMARY KEY(Image_ID),
  	CONSTRAINT IIIIIFK
		FOREIGN KEY(IP_Item_ID) REFERENCES VIRTUAL_STORE(IP_Item_ID));

 CREATE TABLE IP_ITEM_KEYWORDS
(	Keyword_ID			INT				NOT NULL,
	IP_Item_ID			INT				NOT NULL,
	Keyword_Name		VARCHAR(15)		NOT NULL,
	Upload_Date			DATE			NOT NULL,
	CONSTRAINT IIKKIPK
 		PRIMARY KEY(Keyword_ID),
	CONSTRAINT IIKIIIFK
 		FOREIGN KEY(IP_Item_ID) REFERENCES IP_ITEM(IP_Item_ID));

CREATE TABLE ITEMS_IN_WISHLIST
(	Wishlist_ID			INT				NOT NULL,
 	IP_Item_ID			INT				NOT NULL DEFAULT 0,
 	CONSTRAINT IIWPK
 		PRIMARY KEY(Wishlist_ID),
 	CONSTRAINT IIWWIFK
 		FOREIGN KEY(Wishlist_ID) REFERENCES WISHLIST(Wishlist_ID)
 			ON DELETE SET DEFAULT	ON UPDATE CASCADE,
 	CONSTRAINT IIWIPFK
 		FOREIGN KEY(IP_Item_ID) REFERENCES IP_ITEM(IP_Item_ID)
 			ON DELETE SET DEFAULT	ON UPDATE CASCADE);

CREATE TABLE WISHLIST
(	Wishlist_ID			INT				NOT NULL,
	User_ID				INT				NOT NULL DEFAULT 0,
	CONSTRAINT WPK
		PRIMARY KEY(Wishlist_ID)
	CONSTRAINT WFK
		FOREIGN KEY(User_ID) REFERENCES USER(User_ID)
			ON DELETE SET DEFAULT	ON UPDATE CASCADE);

 CREATE TABLE ITEM_ADDED_TO_ORDER
(	Order_ID			INT				NOT NULL,
	IP_Item_ID			INT				NOT NULL DEFAULT 0,
	Quantity			INT				NOT NULL,
	CONSTRAINT IATOPK
 		PRIMARY KEY(Order_ID),
	CONSTRAINT IATOOIFK
 		FOREIGN KEY(Order_ID) REFERENCES ITEM_ORDER(Order_ID),
	CONSTRAINT IATOIIIFK
 		FOREIGN KEY(IP_Item_ID) REFERENCES IP_ITEM(IP_Item_ID)
			ON DELETE SET DEFAULT ON UPDATE CASCADE);

CREATE TABLE ITEM_ORDER
(	Order_ID			INT				NOT NULL,
	Order_Date			DATE			NOT NULL,
	Price				REAL			NOT NULL,
	User_ID				INT				NOT NULL,
	CONSTRAINT IOPK
 		PRIMARY KEY(Order_ID),
	CONSTRAINT IOFK
 		FOREIGN KEY(Price) REFERENCES IP_ITEM(Price),
	CONSTRAINT IOUIFK
 		FOREIGN KEY(User_ID) REFERENCES USER(User_ID));

CREATE TABLE IP_ITEM_REVIEWED
(	Review_ID			INT				NOT NULL,
	IP_Item_ID			INT				NOT NULL,
	CONSTRAINT IRPK
		PRIMARY KEY(Review_ID),
	CONSTRAINT IRRIFK
		FOREIGN KEY(Review_ID) REFERENCES REVIEW(Review_ID),
	CONSTRAINT IROIFK
		FOREIGN KEY(IP_Item_ID) REFERENCES IP_ITEM(IP_Item_ID));

CREATE TABLE ORDER_REVIEWED
(	Review_ID			INT				NOT NULL,
	Order_ID			INT				NOT NULL,
	CONSTRAINT IRPK
		PRIMARY KEY(Review_ID),
	CONSTRAINT IRRIFK
		FOREIGN KEY(Review_ID) REFERENCES REVIEW(Review_ID),
	CONSTRAINT IROIFK
		FOREIGN KEY(Order_ID) REFERENCES ITEM_ORDER(Order_ID));

CREATE TABLE REVIEW
(	Review_ID			INT				NOT NULL,
 	Rating				INT				NOT NULL,
 	Description			VARCHAR(2000),
 	IP_Item_ID			INT				NOT NULL DEFAULT 0,
 	User_ID				INT				NOT NULL DEFAULT 0,
 	CONSTRAINT RPK
 		PRIMARY KEY(Review_ID),
 	CONSTRAINT RIPFK
 		FOREIGN KEY(IP_Item_ID) REFERENCES IP_ITEM(IP_Item_ID)
 			ON DELETE SET DEFAULT	ON UPDATE CASCADE,
 	CONSTRAINT RUIFK
 		FOREIGN KEY(User_ID) REFERENCES USER(User_ID)
 			ON DELETE SET DEFAULT	ON UPDATE CASCADE);

CREATE TABLE VIRTUAL_STORE
(	Store_ID			INT				NOT NULL,
	User_ID				INT				NOT NULL,
	Store_Description	VARCHAR(15),
	Store_Banner		VARCHAR(15),
	Name				VARCHAR(15)		NOT NULL,
	Seller_Bio			VARCHAR(15),
	Store_Category		VARCHAR(15),
 	CONSTRAINT VSSIPK
		PRIMARY KEY(Store_ID),
 	CONSTRAINT VSUIFK
		FOREIGN KEY(User_ID) REFERENCES USER(User_ID));
        
CREATE TABLE VIRTUAL_STORE_URLS
(	URL_ID				INT				NOT NULL,
	URL_Name			VARCHAR(15)		NOT NULL,
	URL_Link			VARCHAR(15)		NOT NULL,
	Store_ID			INT				NOT NULL,
	Upload_Date			DATE			NOT NULL,
	CONSTRAINT VSUUIPK
 		PRIMARY KEY(URL_ID),
 	CONSTRAINT VSUSIFK
		FOREIGN KEY(Store_ID) REFERENCES VIRTUAL_STORE(Store_ID));

CREATE TABLE STORE_CATEGORIES
(	Store_Category_ID	INT				NOT NULL,
	Category_Name		VARCHAR(15)		NOT NULL,
	Description			VARCHAR(15),
	Store_ID			INT				NOT NULL,
	CONSTRAINT SCCNPK
 		PRIMARY KEY(Store_Category_ID)
 	CONSTRAINT SCSIFK
 		FOREIGN KEY(Store_ID) REFERENCES VIRTUAL_STORE(Store_ID));

CREATE TABLE CHARGES
(	Charge_ID			INT				NOT NULL,
  	Payment_Method_ID	INT				NOT NULL,
	Charge_Amount		REAL			NOT NULL,
	CONSTRAINT CCIPK
 		PRIMARY KEY(Charge_ID),
	CONSTRAINT CCIFK
		FOREIGN KEY(Charge_ID) REFERENCES PAYMENT_METHODS(Charge_ID),
	CONSTRAINT CPMIFK
		FOREIGN KEY(Payment_Method_ID) REFERENCES PAYMENT_METHODS(Payment_Method_ID));

CREATE TABLE PAYMENT_METHODS
(	Payment_Method_ID	INT				NOT NULL,
	Preferred_Payment	TINYINT			NOT NULL,
	Charge_ID			INT				NOT NULL,
	CONSTRAINT PMPK
		PRIMARY KEY(Payment_Method_ID));

CREATE TABLE BANK_ACCOUNT
(	Payment_Method_ID	INT				NOT NULL,
	Account_Holder_Name	VARCHAR(15)		NOT NULL,
	Account_Number		INT				NOT NULL,
	Charge_ID			INT				NOT NULL,
	User_ID				INT				NOT NULL DEFAULT 0,
	CONSTRAINT BAPK
		PRIMARY KEY(Payment_Method_ID),
 	CONSTRAINT CCCIFK
		FOREIGN KEY(Charge_ID) REFERENCES PAYMENT_METHODS(Charge_ID),
	CONSTRAINT BAUIFK
		FOREIGN KEY(User_ID) references USER(User_ID)
			ON DELETE SET DEFAULT	ON UPDATE CASCADE);

CREATE TABLE CREDIT_CARD
(	Payment_Method_ID	INT				NOT NULL,
	CVV					INT				NOT NULL,
	Card_Number			INT				NOT NULL,
	Cardholder_Name		VARCHAR(15)		NOT NULL,
	Charge_ID			INT				NOT NULL,
	User_ID				INT				NOT NULL,
	CONSTRAINT CCPK
 		PRIMARY KEY(Payment_Method_ID),
 	CONSTRAINT CCCIFK
		FOREIGN KEY(Charge_ID) REFERENCES PAYMENT_METHODS(Charge_ID),
	CONSTRAINT CCUIFK
		FOREIGN KEY(User_ID) REFERENCES USER(User_ID),
	CONSTRAINT CCPMIFK
 		FOREIGN KEY(Payment_Method_ID) REFERENCES PAYMENT_METHODS(Payment_Method_ID)
			ON DELETE SET DEFAULT	ON UPDATE CASCADE);

CREATE TABLE KARMA
(	Payment_Method_ID	INT				NOT NULL,
	Karma_Wallet_ID		INT				NOT NULL,
	Karma_Balance		INT				NOT NULL,
	Charge_ID			INT				NOT NULL,
	User_ID				INT				NOT NULL DEFAULT 0,
	CONSTRAINT KPK
		PRIMARY KEY(Payment_Method_ID),
 	CONSTRAINT CCCIFK
		FOREIGN KEY(Charge_ID) REFERENCES PAYMENT_METHODS(Charge_ID),
	CONSTRAINT KUIFK
		FOREIGN KEY(User_ID) REFERENCES USER(User_ID)
			ON DELETE SET DEFAULT ON UPDATE CASCADE,
	CONSTRAINT KPMIFK
		FOREIGN KEY(Payment_Method_ID) REFERENCES PAYMENT_METHODS(Payment_Method_ID)
			ON DELETE SET DEFAULT ON UPDATE CASCADE);

CREATE TABLE CRYPTO
(	Payment_Method_ID	INT				NOT NULL,
	Crypto_Wallet_ID	INT				NOT NULL,
	Charge_ID			INT				NOT NULL,
	User_ID				INT				NOT NULL,
	CONSTRAINT CPK
		PRIMARY KEY(Payment_Method_ID),
	CONSTRAINT CPMIFK
		FOREIGN KEY(Payment_Method_ID) REFERENCES PAYMENT_METHODS(Payment_Method_ID),
 	CONSTRAINT CCCIFK
		FOREIGN KEY(Charge_ID) REFERENCES PAYMENT_METHODS(Charge_ID),
	CONSTRAINT CUIFK
        FOREIGN KEY(User_ID) REFERENCES USER(User_ID));


/**
INSERT INTO USER	(User_ID, First_Name, Last_Name, Password, Buyer_Flag, Seller_Flag, Email)
VALUES				(User_ID, First_Name, Last_Name, Password, Buyer_Flag, Seller_Flag, Email);
**/

INSERT INTO USER	(User_ID, First_Name, Last_Name, Password, Buyer_Flag, Seller_Flag, Email)
VALUES				('0000', 'Aastha', 'Aadekar', 'password0', '1', '0', 'email0.com');

INSERT INTO USER	(User_ID, First_Name, Last_Name, Password, Buyer_Flag, Seller_Flag, Email)
VALUES				('0001', 'Barny', 'Balinski', 'password1', '1', '0', 'email1.com');

INSERT INTO USER	(User_ID, First_Name, Last_Name, Password, Buyer_Flag, Seller_Flag, Email)
VALUES				('0002', 'Carlos', 'Cortez', 'password2', '1', '0', 'email2.com');

INSERT INTO USER	(User_ID, First_Name, Last_Name, Password, Buyer_Flag, Seller_Flag, Email)
VALUES				('0003', 'Delmont', 'Dale', 'password3', '1', '0', 'email3.com');

INSERT INTO USER	(User_ID, First_Name, Last_Name, Password, Buyer_Flag, Seller_Flag, Email)
VALUES				('0004', 'Earl', 'Emerson', 'password4', '1', '0', 'email4.com');

INSERT INTO USER	(User_ID, First_Name, Last_Name, Password, Buyer_Flag, Seller_Flag, Email)
VALUES				('0005', 'Farah', 'Fadah', 'password5', '0', '1', 'email5.com');

INSERT INTO USER	(User_ID, First_Name, Last_Name, Password, Buyer_Flag, Seller_Flag, Email)
VALUES				('0006', 'Gunter', 'Gerber', 'password6', '0', '1', 'email6.com');

INSERT INTO USER	(User_ID, First_Name, Last_Name, Password, Buyer_Flag, Seller_Flag, Email)
VALUES				('0007', 'Hana', 'Hwan', 'password7', '0', '1', 'email7.com');

INSERT INTO USER	(User_ID, First_Name, Last_Name, Password, Buyer_Flag, Seller_Flag, Email)
VALUES				('0008', 'Ibrahim', 'Idowu', 'password8', '0', '1', 'email8.com');

INSERT INTO USER	(User_ID, First_Name, Last_Name, Password, Buyer_Flag, Seller_Flag, Email)
VALUES				('0009', 'Jeremy', 'Johnson', 'password9', '0', '1', 'email9.com');

/**
INSERT INTO IP_ITEM	(IP_Item_ID, Store_ID, Title, IP_Description, Price, File_Type)
VALUES				(IP_Item_ID, Store_ID, Title, IP_Description, Price, File_Type);
**/

INSERT INTO IP_ITEM	(IP_Item_ID, Store_ID, Title, IP_Description, Price, File_Type)
VALUES				('1000', '2000', 'part_0', 'description_0', '0.50', '.stl');

INSERT INTO IP_ITEM	(IP_Item_ID, Store_ID, Title, IP_Description, Price, File_Type)
VALUES				('1001', '2001', 'part_1', 'description_1', '1.50','.stl');

INSERT INTO IP_ITEM	(IP_Item_ID, Store_ID, Title, IP_Description, Price, File_Type)
VALUES				('1002', '2002', 'part_2', 'description_2', '2.50','.stl');

INSERT INTO IP_ITEM	(IP_Item_ID, Store_ID, Title, IP_Description, Price, File_Type)
VALUES				('1003', '2003', 'part_3', 'description_3', '3.50','.stl');

INSERT INTO IP_ITEM	(IP_Item_ID, Store_ID, Title, IP_Description, Price, File_Type)
VALUES				('1004', '2004', 'part_4', 'description_4', '4.50','.stl');

INSERT INTO IP_ITEM	(IP_Item_ID, Store_ID, Title, IP_Description, Price, File_Type)
VALUES				('1005', '2000', 'part_5', 'description_5', '5.50','.stl');

INSERT INTO IP_ITEM	(IP_Item_ID, Store_ID, Title, IP_Description, Price, File_Type)
VALUES				('1006', '2001', 'part_6', 'description_6', '6.50','.stl');

INSERT INTO IP_ITEM	(IP_Item_ID, Store_ID, Title, IP_Description, Price, File_Type)
VALUES				('1007', '2002', 'part_7', 'description_7', '7.50','.stl');

INSERT INTO IP_ITEM	(IP_Item_ID, Store_ID, Title, IP_Description, Price, File_Type)
VALUES				('1008', '2003', 'part_8', 'description_8', '8.50','.stl');

INSERT INTO IP_ITEM	(IP_Item_ID, Store_ID, Title, IP_Description, Price, File_Type)
VALUES				('1009', '2004', 'part_9', 'description_9', '9.50','.stl');

/**
INSERT INTO IP_ITEM_IMAGES	(Image_ID, IP_Item_ID, Image_Description, Image_name, File_type, Upload_Date)
VALUES						(Image_ID, IP_Item_ID, Title, Image_Description, Image_name, File_type, Upload_Date);
**/

INSERT INTO IP_ITEM_IMAGES	(Image_ID, IP_Item_ID, Image_Description, Image_name, File_type, Upload_Date)
VALUES						('3000', '1000', 'description0', 'img0', '.png', '2020-01-01');

INSERT INTO IP_ITEM_IMAGES	(Image_ID, IP_Item_ID, Image_Description, Image_name, File_type, Upload_Date)
VALUES						('3001', '1001', 'description1', 'img1', '.png', '2020-01-02');

INSERT INTO IP_ITEM_IMAGES	(Image_ID, IP_Item_ID, Image_Description, Image_name, File_type, Upload_Date)
VALUES						('3002', '1002', 'description2', 'img2', '.png', '2020-01-03');

INSERT INTO IP_ITEM_IMAGES	(Image_ID, IP_Item_ID, Image_Description, Image_name, File_type, Upload_Date)
VALUES						('3003', '1003', 'description3', 'img3', '.png', '2020-01-04');

INSERT INTO IP_ITEM_IMAGES	(Image_ID, IP_Item_ID, Image_Description, Image_name, File_type, Upload_Date)
VALUES						('3004', '1004', 'description4', 'img4', '.png', '2020-01-05');

INSERT INTO IP_ITEM_IMAGES	(Image_ID, IP_Item_ID, Image_Description, Image_name, File_type, Upload_Date)
VALUES						('3005', '1005', 'description5', 'img5', '.png', '2020-01-06');

INSERT INTO IP_ITEM_IMAGES	(Image_ID, IP_Item_ID, Image_Description, Image_name, File_type, Upload_Date)
VALUES						('3006', '1006', 'description6', 'img6', '.png', '2020-01-07');

INSERT INTO IP_ITEM_IMAGES	(Image_ID, IP_Item_ID, Image_Description, Image_name, File_type, Upload_Date)
VALUES						('3007', '1007', 'description7', 'img7', '.png', '2020-01-08');

INSERT INTO IP_ITEM_IMAGES	(Image_ID, IP_Item_ID, Image_Description, Image_name, File_type, Upload_Date)
VALUES						('3008', '1008', 'description8', 'img8', '.png', '2020-01-09');

INSERT INTO IP_ITEM_IMAGES	(Image_ID, IP_Item_ID, Image_Description, Image_name, File_type, Upload_Date)
VALUES						('3009', '1009', 'description9', 'img9', '.png', '2020-01-10');

/**
INSERT INTO IP_ITEM_KEYWORDS	(Keyword_ID, IP_Item_ID, Keyword_Name, Upload_Date)
VALUES							(Keyword_ID, IP_Item_ID, Keyword_Name, Upload_Date);
**/

INSERT INTO IP_ITEM_KEYWORDS	(Keyword_ID, IP_Item_ID, Keyword_Name, Upload_Date)
VALUES							('4000', '1000', 'keyword0', '2020-01-01');

INSERT INTO IP_ITEM_KEYWORDS	(Keyword_ID, IP_Item_ID, Keyword_Name, Upload_Date)
VALUES							('4001', '1001', 'keyword1', '2020-01-02');

INSERT INTO IP_ITEM_KEYWORDS	(Keyword_ID, IP_Item_ID, Keyword_Name, Upload_Date)
VALUES							('4002', '1002', 'keyword2', '2020-01-03');

INSERT INTO IP_ITEM_KEYWORDS	(Keyword_ID, IP_Item_ID, Keyword_Name, Upload_Date)
VALUES							('4003', '1003', 'keyword3', '2020-01-04');

INSERT INTO IP_ITEM_KEYWORDS	(Keyword_ID, IP_Item_ID, Keyword_Name, Upload_Date)
VALUES							('4004', '1004', 'keyword4', '2020-01-05');

INSERT INTO IP_ITEM_KEYWORDS	(Keyword_ID, IP_Item_ID, Keyword_Name, Upload_Date)
VALUES							('4005', '1005', 'keyword5', '2020-01-06');

INSERT INTO IP_ITEM_KEYWORDS	(Keyword_ID, IP_Item_ID, Keyword_Name, Upload_Date)
VALUES							('4006', '1006', 'keyword6', '2020-01-07');

INSERT INTO IP_ITEM_KEYWORDS	(Keyword_ID, IP_Item_ID, Keyword_Name, Upload_Date)
VALUES							('4007', '1007', 'keyword7', '2020-01-08');

INSERT INTO IP_ITEM_KEYWORDS	(Keyword_ID, IP_Item_ID, Keyword_Name, Upload_Date)
VALUES							('4008', '1008', 'keyword8', '2020-01-09');

INSERT INTO IP_ITEM_KEYWORDS	(Keyword_ID, IP_Item_ID, Keyword_Name, Upload_Date)
VALUES							('4009', '1009', 'keyword9', '2020-01-10');

/**
INSERT INTO ITEMS_IN_WISHLIST	(Wishlist_ID, IP_Item_ID)
VALUES							(Wishlist_ID, IP_Item_ID);
**/

INSERT INTO ITEMS_IN_WISHLIST	(Wishlist_ID, IP_Item_ID)
VALUES							('5000', '1000');

INSERT INTO ITEMS_IN_WISHLIST	(Wishlist_ID, IP_Item_ID)
VALUES							('5001', '1001');

INSERT INTO ITEMS_IN_WISHLIST	(Wishlist_ID, IP_Item_ID)
VALUES							('5002', '1002');

INSERT INTO ITEMS_IN_WISHLIST	(Wishlist_ID, IP_Item_ID)
VALUES							('5003', '1003');

INSERT INTO ITEMS_IN_WISHLIST	(Wishlist_ID, IP_Item_ID)
VALUES							('5004', '1004');

INSERT INTO ITEMS_IN_WISHLIST	(Wishlist_ID, IP_Item_ID)
VALUES							('5005', '1005');

INSERT INTO ITEMS_IN_WISHLIST	(Wishlist_ID, IP_Item_ID)
VALUES							('5006', '1006');

INSERT INTO ITEMS_IN_WISHLIST	(Wishlist_ID, IP_Item_ID)
VALUES							('5007', '1007');

INSERT INTO ITEMS_IN_WISHLIST	(Wishlist_ID, IP_Item_ID)
VALUES							('5008', '1008');

INSERT INTO ITEMS_IN_WISHLIST	(Wishlist_ID, IP_Item_ID)
VALUES							('5009', '1009');

/**
INSERT INTO WISHLIST	(Wishlist_ID, User_ID)
VALUES					(Wishlist_ID, User_ID);
**/

INSERT INTO WISHLIST	(Wishlist_ID, User_ID)
VALUES					('5000', '0005');

INSERT INTO WISHLIST	(Wishlist_ID, User_ID)
VALUES					('5001', '0006');

INSERT INTO WISHLIST	(Wishlist_ID, User_ID)
VALUES					('5002', '0007');

INSERT INTO WISHLIST	(Wishlist_ID, User_ID)
VALUES					('5003', '0008');

INSERT INTO WISHLIST	(Wishlist_ID, User_ID)
VALUES					('5004', '0009');

INSERT INTO WISHLIST	(Wishlist_ID, User_ID)
VALUES					('5005', '0005');

INSERT INTO WISHLIST	(Wishlist_ID, User_ID)
VALUES					('5006', '0006');

INSERT INTO WISHLIST	(Wishlist_ID, User_ID)
VALUES					('5007', '0007');

INSERT INTO WISHLIST	(Wishlist_ID, User_ID)
VALUES					('5008', '0008');

INSERT INTO WISHLIST	(Wishlist_ID, User_ID)
VALUES					('5009', '0009');

/**
INSERT INTO ITEM_ADDED_TO_ORDER	(Order_ID, IP_Item_ID, Quantity)
VALUES							(Order_ID, IP_Item_ID, Quantity)
**/

INSERT INTO ITEM_ADDED_TO_ORDER	(Order_ID, IP_Item_ID, Quantity)
VALUES							('6000', '1000', '1');

INSERT INTO ITEM_ADDED_TO_ORDER	(Order_ID, IP_Item_ID, Quantity)
VALUES							('6001', '1001', '2');

INSERT INTO ITEM_ADDED_TO_ORDER	(Order_ID, IP_Item_ID, Quantity)
VALUES							('6002', '1002', '3');

INSERT INTO ITEM_ADDED_TO_ORDER	(Order_ID, IP_Item_ID, Quantity)
VALUES							('6003', '1003', '4');

INSERT INTO ITEM_ADDED_TO_ORDER	(Order_ID, IP_Item_ID, Quantity)
VALUES							('6004', '1004', '5');

/**
INSERT INTO ITEM_ORDER	(Order_ID, Order_Date, Price, User_ID)
VALUES					(Order_ID, Order_Date, Price, User_ID);
**/

INSERT INTO ITEM_ORDER	(Order_ID, Order_Date, Price, User_ID)
VALUES					('6000', '2020-01-01', '0.5', '0005');

INSERT INTO ITEM_ORDER	(Order_ID, Order_Date, Price, User_ID)
VALUES					('6001', '2020-01-02', '3.5', '0006');

INSERT INTO ITEM_ORDER	(Order_ID, Order_Date, Price, User_ID)
VALUES					('6002', '2020-01-03', '7.5', '0007');

INSERT INTO ITEM_ORDER	(Order_ID, Order_Date, Price, User_ID)
VALUES					('6003', '2020-01-04', '14', '0008');

INSERT INTO ITEM_ORDER	(Order_ID, Order_Date, Price, User_ID)
VALUES					('6004', '2020-01-05', '22.5', '0009');

/**
INSERT INTO IP_ITEM_REVIEWED	(Review_ID, IP_Item_ID)
VALUES							(Review_ID, IP_Item_ID)
**/

INSERT INTO IP_ITEM_REVIEWED	(Review_ID, IP_Item_ID)
VALUES							('7000', '1000');

INSERT INTO IP_ITEM_REVIEWED	(Review_ID, IP_Item_ID)
VALUES							('7001', '1001');

INSERT INTO IP_ITEM_REVIEWED	(Review_ID, IP_Item_ID)
VALUES							('7002', '1002');

INSERT INTO IP_ITEM_REVIEWED	(Review_ID, IP_Item_ID)
VALUES							('7003', '1003');

INSERT INTO IP_ITEM_REVIEWED	(Review_ID, IP_Item_ID)
VALUES							('7004', '1004');

/**
INSERT INTO ORDER_REVIEWED	(Review_ID, Order_ID)
VALUES 						(Review_ID, Order_ID);
**/

INSERT INTO ORDER_REVIEWED	(Review_ID, Order_ID)
VALUES 						('7000', '6000');

INSERT INTO ORDER_REVIEWED	(Review_ID, Order_ID)
VALUES 						('7001', '6001');

INSERT INTO ORDER_REVIEWED	(Review_ID, Order_ID)
VALUES 						('7002', '6002');

INSERT INTO ORDER_REVIEWED	(Review_ID, Order_ID)
VALUES 						('7003', '6003');

INSERT INTO ORDER_REVIEWED	(Review_ID, Order_ID)
VALUES 						('7004', '6004');

/**
INSERT INTO REVIEW	(Review_ID, Rating, Description, IP_Item_ID, User_ID)
VALUES				(Review_ID, Rating, Description, IP_Item_ID, User_ID);
**/

INSERT INTO REVIEW	(Review_ID, Rating, Description, IP_Item_ID, User_ID)
VALUES				('7000', '1', 'description1', '1000', '0005');

INSERT INTO REVIEW	(Review_ID, Rating, Description, IP_Item_ID, User_ID)
VALUES				('7001', '2', 'description2', '1001', '0006');

INSERT INTO REVIEW	(Review_ID, Rating, Description, IP_Item_ID, User_ID)
VALUES				('7002', '3', 'description3', '1002', '0007');

INSERT INTO REVIEW	(Review_ID, Rating, Description, IP_Item_ID, User_ID)
VALUES				('7003', '4', 'description4', '1003', '0008');

INSERT INTO REVIEW	(Review_ID, Rating, Description, IP_Item_ID, User_ID)
VALUES				('7004', '5', 'description5', '1004', '0009');

/**
INSERT INTO VIRTUAL_STORE	(Store_ID, User_ID, Store_Description, Store_Banner, Name, Seller_Bio, Seller_Photo, Store_Category)
VALUES						(Store_ID, User_ID, Store_Description, Store_Banner, Name, Seller_Bio, Seller_Photo, Store_Category)
**/

INSERT INTO VIRTUAL_STORE	(Store_ID, User_ID, Store_Description, Store_Banner, Name, Seller_Bio, Store_Category)
VALUES						('2000', '0000', 'description1', 'banner1', 'store1', 'bio1', 'category1');

INSERT INTO VIRTUAL_STORE	(Store_ID, User_ID, Store_Description, Store_Banner, Name, Seller_Bio, Store_Category)
VALUES						('2001', '0001', 'description2', 'banner2', 'store2', 'bio2', 'category2');

INSERT INTO VIRTUAL_STORE	(Store_ID, User_ID, Store_Description, Store_Banner, Name, Seller_Bio, Store_Category)
VALUES						('2002', '0002', 'description3', 'banner3', 'store3', 'bio3', 'category3');

INSERT INTO VIRTUAL_STORE	(Store_ID, User_ID, Store_Description, Store_Banner, Name, Seller_Bio, Store_Category)
VALUES						('2003', '0003', 'description4', 'banner4', 'store4', 'bio4', 'category4');

INSERT INTO VIRTUAL_STORE	(Store_ID, User_ID, Store_Description, Store_Banner, Name, Seller_Bio, Store_Category)
VALUES						('2004', '0004', 'description5', 'banner5', 'store5', 'bio5', 'category5');

/**
INSERT INTO VIRTUAL_STORE_URLS	(URL_ID, URL_Name, URL_Link, Store_ID, Upload_Date)
VALUES							(URL_ID, URL_Name, URL_Link, Store_ID, Upload_Date)
**/

INSERT INTO VIRTUAL_STORE_URLS	(URL_ID, URL_Name, URL_Link, Store_ID, Upload_Date)
VALUES							('8000', 'store1URL', 'store1.com', '2000', '2019-01-01');

INSERT INTO VIRTUAL_STORE_URLS	(URL_ID, URL_Name, URL_Link, Store_ID, Upload_Date)
VALUES							('8001', 'store2URL', 'store2.com', '2001', '2019-01-02');

INSERT INTO VIRTUAL_STORE_URLS	(URL_ID, URL_Name, URL_Link, Store_ID, Upload_Date)
VALUES							('8002', 'store3URL', 'store3.com', '2002', '2019-01-03');

INSERT INTO VIRTUAL_STORE_URLS	(URL_ID, URL_Name, URL_Link, Store_ID, Upload_Date)
VALUES							('8003', 'store4URL', 'store4.com', '2003', '2019-01-04');

INSERT INTO VIRTUAL_STORE_URLS	(URL_ID, URL_Name, URL_Link, Store_ID, Upload_Date)
VALUES							('8004', 'store5URL', 'store5.com', '2004', '2019-01-05');

/**
INSERT INTO STORE_CATEGORIES	(Store_Category_ID, Category_Name, Description, Store_ID)
VALUES							(Store_Category_ID, Category_Name, Description, Store_ID)
**/

INSERT INTO STORE_CATEGORIES	(Store_Category_ID, Category_Name, Description, Store_ID)
VALUES							('9000', 'category1', 'description1', '2000');

INSERT INTO STORE_CATEGORIES	(Store_Category_ID, Category_Name, Description, Store_ID)
VALUES							('9001', 'category2', 'description2', '2001');

INSERT INTO STORE_CATEGORIES	(Store_Category_ID, Category_Name, Description, Store_ID)
VALUES							('9002', 'category3', 'description3', '2002');

INSERT INTO STORE_CATEGORIES	(Store_Category_ID, Category_Name, Description, Store_ID)
VALUES							('9003', 'category4', 'description4', '2003');

INSERT INTO STORE_CATEGORIES	(Store_Category_ID, Category_Name, Description, Store_ID)
VALUES							('9004', 'category5', 'description5', '2004');

/**
INSERT INTO CHARGES	(Charge_ID, Payment_Method_ID, Charge_Amount)
VALUES				(Charge_ID, Payment_Method_ID, Charge_Amount)
**/

INSERT INTO CHARGES	(Charge_ID, Payment_Method_ID, Charge_Amount)
VALUES				('10000', '11000', '0.5');

INSERT INTO CHARGES	(Charge_ID, Payment_Method_ID, Charge_Amount)
VALUES				('10001', '11001', '3.5');

INSERT INTO CHARGES	(Charge_ID, Payment_Method_ID, Charge_Amount)
VALUES				('10002', '11002', '7.5');

INSERT INTO CHARGES	(Charge_ID, Payment_Method_ID, Charge_Amount)
VALUES				('10003', '11003', '14');

INSERT INTO CHARGES	(Charge_ID, Payment_Method_ID, Charge_Amount)
VALUES				('10004', '11004', '22.5');

/**
INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						(Payment_Method_ID, Preferred_Payment, Charge_ID)
**/

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11000', '0', '10000');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11001', '0', '10001');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11002', '0', '10002');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11003', '0', '10003');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11004', '0', '10004');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11005', '0', '10005');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11006', '0', '10006');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11007', '0', '10007');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11008', '0', '10008');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11009', '0', '10009');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11010', '0', '10010');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11011', '0', '10011');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11012', '0', '10012');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11013', '0', '10013');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11014', '0', '10014');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11015', '0', '10015');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11016', '0', '10016');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11017', '0', '10017');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11018', '0', '10018');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11019', '0', '10019');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11020', '0', '10020');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11021', '0', '10021');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11022', '0', '10022');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11023', '0', '10023');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11024', '0', '10024');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11025', '0', '10025');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11026', '0', '10026');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11027', '0', '10027');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11028', '0', '10028');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11029', '0', '10029');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11030', '0', '10030');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11031', '0', '10031');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11032', '0', '10032');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11033', '0', '10033');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11034', '0', '10034');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11035', '0', '10035');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11036', '0', '10036');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11037', '0', '10037');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11038', '0', '10038');

INSERT INTO PAYMENT_METHODS	(Payment_Method_ID, Preferred_Payment, Charge_ID)
VALUES						('11039', '0', '10039');

/**
INSERT INTO BANK_ACCOUNT	(Payment_Method_ID, Account_Holder_Name, Account_Number, Charge_ID, User_ID)
VALUES						(Payment_Method_ID, Account_Holder_Name, Account_Number, Charge_ID, User_ID)
**/

INSERT INTO BANK_ACCOUNT	(Payment_Method_ID, Account_Holder_Name, Account_Number, Charge_ID, User_ID)
VALUES						('11000', 'Aastha Adekar', '12000', '10000', '0000');

INSERT INTO BANK_ACCOUNT	(Payment_Method_ID, Account_Holder_Name, Account_Number, Charge_ID, User_ID)
VALUES						('11001', 'Barny Balinski', '12001', '10001', '0001');

INSERT INTO BANK_ACCOUNT	(Payment_Method_ID, Account_Holder_Name, Account_Number, Charge_ID, User_ID)
VALUES						('11002', 'Carlos Cortez', '12002', '10002', '0002');

INSERT INTO BANK_ACCOUNT	(Payment_Method_ID, Account_Holder_Name, Account_Number, Charge_ID, User_ID)
VALUES						('11003', 'Delmont Dale', '12003', '10003', '0003');

INSERT INTO BANK_ACCOUNT	(Payment_Method_ID, Account_Holder_Name, Account_Number, Charge_ID, User_ID)
VALUES						('11004', 'Earl Emerson', '12004', '10004', '0004');

INSERT INTO BANK_ACCOUNT	(Payment_Method_ID, Account_Holder_Name, Account_Number, Charge_ID, User_ID)
VALUES						('11005', 'Farah Fadah', '12005', '10005', '0005');

INSERT INTO BANK_ACCOUNT	(Payment_Method_ID, Account_Holder_Name, Account_Number, Charge_ID, User_ID)
VALUES						('11006', 'Gunter Gerber', '12006', '10006', '0006');

INSERT INTO BANK_ACCOUNT	(Payment_Method_ID, Account_Holder_Name, Account_Number, Charge_ID, User_ID)
VALUES						('11007', 'Hana Hwan', '12007', '10007', '0007');

INSERT INTO BANK_ACCOUNT	(Payment_Method_ID, Account_Holder_Name, Account_Number, Charge_ID, User_ID)
VALUES						('11008', 'Ibrahim Idowu', '12008', '10008', '0008');

INSERT INTO BANK_ACCOUNT	(Payment_Method_ID, Account_Holder_Name, Account_Number, Charge_ID, User_ID)
VALUES						('11009', 'Jeremy Johnson', '12009', '10009', '0009');

/**
INSERT INTO CREDIT_CARD	(Payment_Method_ID, CVV, Card_Number, Cardholder_Name, Charge_ID, User_ID)
VALUES					(Payment_Method_ID, CVV, Card_Number, Cardholder_Name, Charge_ID, User_ID)
**/

INSERT INTO CREDIT_CARD	(Payment_Method_ID, CVV, Card_Number, Cardholder_Name, Charge_ID, User_ID)
VALUES					('11010', '010', '1101001011010010', 'Aastha Adekar', '10010', '0000');

INSERT INTO CREDIT_CARD	(Payment_Method_ID, CVV, Card_Number, Cardholder_Name, Charge_ID, User_ID)
VALUES					('11011', '011', '1101101111011011', 'Barny Balinski', '10011', '0001');

INSERT INTO CREDIT_CARD	(Payment_Method_ID, CVV, Card_Number, Cardholder_Name, Charge_ID, User_ID)
VALUES					('11012', '012', '1101201211012012', 'Carlos Cortez', '10012', '0002');

INSERT INTO CREDIT_CARD	(Payment_Method_ID, CVV, Card_Number, Cardholder_Name, Charge_ID, User_ID)
VALUES					('11013', '013', '1101301311013013', 'Delmont Dale', '10013', '0003');

INSERT INTO CREDIT_CARD	(Payment_Method_ID, CVV, Card_Number, Cardholder_Name, Charge_ID, User_ID)
VALUES					('11014', '014', '1101401411014014', 'Earl Emerson', '10014', '0004');

INSERT INTO CREDIT_CARD	(Payment_Method_ID, CVV, Card_Number, Cardholder_Name, Charge_ID, User_ID)
VALUES					('11015', '015', '1101501511015015', 'Farah Fadah', '10015', '0005');

INSERT INTO CREDIT_CARD	(Payment_Method_ID, CVV, Card_Number, Cardholder_Name, Charge_ID, User_ID)
VALUES					('11016', '016', '1101601611016016', 'Gunter Gerber', '10016', '0006');

INSERT INTO CREDIT_CARD	(Payment_Method_ID, CVV, Card_Number, Cardholder_Name, Charge_ID, User_ID)
VALUES					('11017', '017', '1101701711017017', 'Hana Hwan', '10017', '0007');

INSERT INTO CREDIT_CARD	(Payment_Method_ID, CVV, Card_Number, Cardholder_Name, Charge_ID, User_ID)
VALUES					('11018', '018', '1101801811018018', 'Ibrahim Idowu', '10018', '0008');

INSERT INTO CREDIT_CARD	(Payment_Method_ID, CVV, Card_Number, Cardholder_Name, Charge_ID, User_ID)
VALUES					('11019', '019', '1101901911019019', 'Jeremy Johnson', '10019', '0009');

/**
INSERT INTO KARMA	(Payment_Method_ID, Karma_Wallet_ID, Karma_Balance, Charge_ID, User_ID)
VALUES				(Payment_Method_ID, Karma_Wallet_ID, Karma_Balance, Charge_ID, User_ID)
**/

INSERT INTO KARMA	(Payment_Method_ID, Karma_Wallet_ID, Karma_Balance, Charge_ID, User_ID)
VALUES				('11020', '13000', '100', '10020', '0000');

INSERT INTO KARMA	(Payment_Method_ID, Karma_Wallet_ID, Karma_Balance, Charge_ID, User_ID)
VALUES				('11021', '13001', '100', '10021', '0001');

INSERT INTO KARMA	(Payment_Method_ID, Karma_Wallet_ID, Karma_Balance, Charge_ID, User_ID)
VALUES				('11022', '13002', '100', '10022', '0002');

INSERT INTO KARMA	(Payment_Method_ID, Karma_Wallet_ID, Karma_Balance, Charge_ID, User_ID)
VALUES				('11023', '13003', '100', '10023', '0003');

INSERT INTO KARMA	(Payment_Method_ID, Karma_Wallet_ID, Karma_Balance, Charge_ID, User_ID)
VALUES				('11024', '13004', '100', '10024', '0004');

INSERT INTO KARMA	(Payment_Method_ID, Karma_Wallet_ID, Karma_Balance, Charge_ID, User_ID)
VALUES				('11025', '13005', '100', '10025', '0005');

INSERT INTO KARMA	(Payment_Method_ID, Karma_Wallet_ID, Karma_Balance, Charge_ID, User_ID)
VALUES				('11026', '13006', '100', '10026', '0006');

INSERT INTO KARMA	(Payment_Method_ID, Karma_Wallet_ID, Karma_Balance, Charge_ID, User_ID)
VALUES				('11027', '13007', '100', '10027', '0007');

INSERT INTO KARMA	(Payment_Method_ID, Karma_Wallet_ID, Karma_Balance, Charge_ID, User_ID)
VALUES				('11028', '13008', '100', '10028', '0008');

INSERT INTO KARMA	(Payment_Method_ID, Karma_Wallet_ID, Karma_Balance, Charge_ID, User_ID)
VALUES				('11029', '13009', '100', '10029', '0009');

/**
INSERT INTO CRYPTO	(Payment_Method_ID, Crypto_Wallet_ID, Charge_ID, User_ID)
VALUES				(Payment_Method_ID, Crypto_Wallet_ID, Charge_ID, User_ID)
**/

INSERT INTO CRYPTO	(Payment_Method_ID, Crypto_Wallet_ID, Charge_ID, User_ID)
VALUES				('11030', '14000', '10030', '0000');

INSERT INTO CRYPTO	(Payment_Method_ID, Crypto_Wallet_ID, Charge_ID, User_ID)
VALUES				('11031', '14001', '10031', '0001');

INSERT INTO CRYPTO	(Payment_Method_ID, Crypto_Wallet_ID, Charge_ID, User_ID)
VALUES				('11032', '14002', '10032', '0002');

INSERT INTO CRYPTO	(Payment_Method_ID, Crypto_Wallet_ID, Charge_ID, User_ID)
VALUES				('11033', '14003', '10033', '0003');

INSERT INTO CRYPTO	(Payment_Method_ID, Crypto_Wallet_ID, Charge_ID, User_ID)
VALUES				('11034', '14004', '10034', '0004');

INSERT INTO CRYPTO	(Payment_Method_ID, Crypto_Wallet_ID, Charge_ID, User_ID)
VALUES				('11035', '14005', '10035', '0005');

INSERT INTO CRYPTO	(Payment_Method_ID, Crypto_Wallet_ID, Charge_ID, User_ID)
VALUES				('11036', '14006', '10036', '0006');

INSERT INTO CRYPTO	(Payment_Method_ID, Crypto_Wallet_ID, Charge_ID, User_ID)
VALUES				('11037', '14007', '10037', '0007');

INSERT INTO CRYPTO	(Payment_Method_ID, Crypto_Wallet_ID, Charge_ID, User_ID)
VALUES				('11038', '14008', '10038', '0008');

INSERT INTO CRYPTO	(Payment_Method_ID, Crypto_Wallet_ID, Charge_ID, User_ID)
VALUES				('11039', '14009', '10039', '0009');

/**
3a - Create a list of IP Items and their respective stores.
**/

SELECT IP.Title, VS.Name
	FROM IP_ITEM AS IP, VIRTUAL_STORE AS VS
		WHERE IP.Store_ID == VS.Store_ID;

/**
3b - Create a list of titles of IP Items that cost less than $10.
**/

SELECT IP.IP_Item_ID, IP.Title, IP.Price
	FROM IP_ITEM AS IP
		WHERE	IP.Price < 10;

/**
3c - Create a list of IP Item titles and dates of purchase made by a given buyer (you choose how to designate a buyer).
**/

SELECT	U.User_ID, U.First_Name, U.Last_Name, IP.Title, IO.Order_Date
	FROM	USER AS U, ITEM_ORDER AS IO, ITEM_ADDED_TO_ORDER AS IATO, IP_ITEM AS IP
		WHERE	U.Buyer_Flag == 0
		AND		U.User_ID == IO.User_ID
		AND		IO.Order_ID == IATO.Order_ID
		AND		IATO.IP_Item_ID == IP.IP_Item_ID;

/**
3d - List all the buyers who purchased an IP Item from a given store (you choose how to designate a store) and the names of the IP Items they purchased.
**/

SELECT	U.User_ID, U.First_Name, U.Last_Name, IP.Title, VS.Store_ID, VS.Name
	FROM	USER AS U, ITEM_ORDER AS IO, ITEM_ADDED_TO_ORDER AS IATO, IP_ITEM AS IP, VIRTUAL_STORE AS VS
		WHERE	U.Buyer_Flag == 0
		AND 	VS.Store_ID == IP.Store_ID
		AND 	IP.IP_Item_ID == IATO.IP_Item_ID
		AND 	IATO.Order_ID == IO.Order_ID
		AND 	IO.User_ID == U.User_ID;

/**
3e - Determine the buyer(s) who purchased the most IP Items and the total number of IP Items they have purchased.
**/

SELECT U.User_ID, U.First_Name, U.Last_Name, COUNT(IP.IP_Item_ID)
	FROM	USER AS U, ITEM_ORDER AS IO, ITEM_ADDED_TO_ORDER AS IATO, IP_ITEM AS IP
		WHERE	U.Buyer_Flag == 0
		AND		U.User_ID = IO.User_ID
		AND 	IO.Order_ID = IATO.Order_ID
	GROUP BY 	U.User_ID;

/**
3f - Create a list of stores who currently offer at most 5 IP Items for sale.
**/

SELECT	VS.Store_ID, VS.Name, COUNT(IP.IP_Item_ID)
	FROM	VIRTUAL_STORE AS VS, IP_ITEM AS IP
		WHERE	VS.Store_ID == IP.Store_ID
	GROUP BY	VS.Store_ID;

/**
3g - Find the highest selling item, total number of units of that sold item, total dollar sales for that item, and the store/seller who sells it.
**/

SELECT IP.Title, COUNT(IATO.Order_ID), COUNT(IATO.Order_ID) * IP.Price, VS.Name, VS.Store_ID
	FROM	IP_ITEM AS IP, ITEM_ADDED_TO_ORDER AS IATO, VIRTUAL_STORE AS VS
		WHERE	IP.IP_Item_ID == IATO.IP_Item_ID
        AND		IP.Store_ID == VS.Store_ID
	GROUP BY	IP.IP_Item_ID
	ORDER BY	COUNT(IATO.Order_ID) * IP.Price DESC;

/**
3h - Create a list of all payment types accepted, number of times each of them was used, and total mount charged to that type of payment.
**/

SELECT	C.Charge_ID, COUNT(C.Payment_Method_ID), SUM(C.Charge_Amount)
	FROM	CHARGES AS C, PAYMENT_METHODS AS PM
		WHERE	C.Payment_Method_ID == PM.Payment_Method_ID
	GROUP BY	PM.Payment_Method_ID
	ORDER BY	COUNT(PM.Payment_Method_ID) * C.Charge_Amount DESC;

/**
3i - Retrieve the name and contact info of the customer who has the highest karma point balance
**/

SELECT	U.User_ID, U.First_Name, U.Last_Name, U.Email, K.Payment_Method_ID, K.Karma_Balance
	FROM	USER AS U, KARMA AS K
		WHERE	U.Buyer_Flag == 0;

/**
5a - Provide a list of buyer names, along with the total dollar amount each buyer has spent in the last year.
**/
SELECT		U.First_Name, U.Last_Name, SUM(IP.Price)
	FROM		USER AS U, ITEM_ORDER AS IO, ITEM_ADDED_TO_ORDER AS IATO, IP_ITEM AS IP
		WHERE		U.Buyer_Flag == 0
		AND			U.User_ID == IO.User_ID
		AND			IO.Order_ID == IATO.Order_ID
		AND			IATO.IP_Item_ID == IP.IP_Item_ID
	GROUP BY	U.User_ID;

/**
5b - Provide a list of buyer names and e-mail addresses for buyers who have spent more than the average buyer.
**/
SELECT	U.First_Name, U.Last_Name, U.Email
	FROM	USER AS U, ITEM_ORDER AS IO, ITEM_ADDED_TO_ORDER AS IATO, IP_ITEM AS IP
		WHERE	U.User_ID == IO.User_ID
		AND		IO.Order_ID == IATO.Order_ID
		AND		IATO.IP_Item_ID == IP.IP_Item_ID
	GROUP BY	U.User_ID
		HAVING	SUM(IP.Price) > (SELECT AVG(Total_Price)
		FROM	(SELECT SUM(IP.Price) AS Total_Price FROM USER AS U, ITEM_ORDER AS IO, ITEM_ADDED_TO_ORDER AS IATO, IP_ITEM AS IP
			WHERE	U.User_ID == IO.User_ID
			AND		IO.Order_ID == IATO.Order_ID
			AND		IATO.IP_Item_ID == IP.IP_Item_ID
		GROUP BY	U.User_ID));

/**
5c - Provide a list of the IP Item names and associated total copies sold to all buyers, sorted from the IP Item that has sold the most individual copies to the IP Item that has sold the least.
**/
SELECT	IP.Title, COUNT(IP.IP_Item_ID) as Total_Copies_Sold
	FROM	IP_ITEM AS IP, ITEM_ADDED_TO_ORDER AS IATO
		WHERE	IP.IP_Item_ID == IATO.IP_Item_ID
	GROUP BY	IP.IP_Item_ID
	ORDER BY	Total_Copies_Sold DESC;

/**
5d - Provide a list of the IP Item names and associated dollar totals for copies sold to all buyers, sorted from the IP Item that has sold the highest dollar amount to the IP Item that has sold the smallest.
**/
SELECT IP.Title, COUNT(IATO.IP_Item_ID) * IP.Price as Revenue
	FROM IP_ITEM AS IP, ITEM_ADDED_TO_ORDER AS IATO
		WHERE	IP.IP_Item_ID == IATO.IP_Item_ID
	GROUP BY	IP.IP_Item_ID
	ORDER BY 	Revenue DESC;

/**
5e - Find the most popular seller (i.e. the one who has sold the most IP Items).
**/
SELECT	U.First_Name, U.Last_Name, (SELECT MAX(IP_Item_ID) FROM ITEM_ADDED_TO_ORDER) as Most_Sold_Item_ID
	FROM	USER AS U, IP_ITEM AS IP, ITEM_ADDED_TO_ORDER AS IATO, VIRTUAL_STORE AS VS
		WHERE	IATO.IP_Item_ID == IP.IP_Item_ID
		AND		IP.Store_ID == VS.Store_ID
		AND 	VS.User_ID == U.User_ID
	GROUP BY 	IP.IP_Item_ID
	ORDER BY	Most_Sold_Item_ID DESC;

/**
5f - Find the most profitable seller (i.e. the one who has brought in the most money)
**/
/**
SELECT U.First_Name, U.Last_Name, MAX(profit)
	FROM (SELECT U.First_Name, U.Last_Name, SUM(IP.Price) AS profit FROM ITEM_ADDED_TO_ORDER AS IATO, IP_ITEM AS IP, VIRTUAL_STORE AS VS, USER AS U
		WHERE	IATO.IP_Item_ID == IP.IP_Item_ID
		AND		IP.Store_ID == VS.Store_ID
		AND		VS.User_ID == U.User_ID
	GROUP BY	U.User_ID);
**/
SELECT U.First_Name, U.Last_Name, (MAX(IP.Price)) as Profit
	FROM ITEM_ADDED_TO_ORDER AS IATO, IP_ITEM AS IP, VIRTUAL_STORE AS VS, USER AS U
 		WHERE	IATO.IP_Item_ID == IP.IP_Item_ID
		AND		IP.Store_ID == VS.Store_ID
		AND		VS.User_ID == U.User_ID
	GROUP BY	U.User_ID;