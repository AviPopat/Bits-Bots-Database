/**
3a - Create a list of IP Items and their respective stores.
**/

SELECT IP.Title, VS.Name
	FROM IP_ITEM AS IP, VIRTUAL_STORE AS VS
		WHERE IP.Store_ID == VS.Store_ID;

/**
3b - Create a list of titles of IP Items that cost less than $10.
**/

SELECT IP.IP_Item_ID, IP.Title, IP.Price
	FROM IP_ITEM AS IP
		WHERE	IP.Price < 10;

/**
3c - Create a list of IP Item titles and dates of purchase made by a given buyer (you choose how to designate a buyer).
**/

SELECT	U.User_ID, U.First_Name, U.Last_Name, IP.Title, IO.Order_Date
	FROM	USER AS U, ITEM_ORDER AS IO, ITEM_ADDED_TO_ORDER AS IATO, IP_ITEM AS IP
		WHERE	U.Buyer_Flag == 0
		AND		U.User_ID == IO.User_ID
		AND		IO.Order_ID == IATO.Order_ID
		AND		IATO.IP_Item_ID == IP.IP_Item_ID;

/**
3d - List all the buyers who purchased an IP Item from a given store (you choose how to designate a store) and the names of the IP Items they purchased.
**/

SELECT	U.User_ID, U.First_Name, U.Last_Name, IP.Title, VS.Store_ID, VS.Name
	FROM	USER AS U, ITEM_ORDER AS IO, ITEM_ADDED_TO_ORDER AS IATO, IP_ITEM AS IP, VIRTUAL_STORE AS VS
		WHERE	U.Buyer_Flag == 0
		AND 	VS.Store_ID == IP.Store_ID
		AND 	IP.IP_Item_ID == IATO.IP_Item_ID
		AND 	IATO.Order_ID == IO.Order_ID
		AND 	IO.User_ID == U.User_ID;

/**
3e - Determine the buyer(s) who purchased the most IP Items and the total number of IP Items they have purchased.
**/

SELECT U.User_ID, U.First_Name, U.Last_Name, COUNT(IP.IP_Item_ID)
	FROM	USER AS U, ITEM_ORDER AS IO, ITEM_ADDED_TO_ORDER AS IATO, IP_ITEM AS IP
		WHERE	U.Buyer_Flag == 0
		AND		U.User_ID = IO.User_ID
		AND 	IO.Order_ID = IATO.Order_ID
	GROUP BY 	U.User_ID;

/**
3f - Create a list of stores who currently offer at most 5 IP Items for sale.
**/

SELECT	VS.Store_ID, VS.Name, COUNT(IP.IP_Item_ID)
	FROM	VIRTUAL_STORE AS VS, IP_ITEM AS IP
		WHERE	VS.Store_ID == IP.Store_ID
	GROUP BY	VS.Store_ID;

/**
3g - Find the highest selling item, total number of units of that sold item, total dollar sales for that item, and the store/seller who sells it.
**/

SELECT IP.Title, COUNT(IATO.Order_ID), COUNT(IATO.Order_ID) * IP.Price, VS.Name, VS.Store_ID
	FROM	IP_ITEM AS IP, ITEM_ADDED_TO_ORDER AS IATO, VIRTUAL_STORE AS VS
		WHERE	IP.IP_Item_ID == IATO.IP_Item_ID
        AND		IP.Store_ID == VS.Store_ID
	GROUP BY	IP.IP_Item_ID
	ORDER BY	COUNT(IATO.Order_ID) * IP.Price DESC;

/**
3h - Create a list of all payment types accepted, number of times each of them was used, and total mount charged to that type of payment.
**/

SELECT	C.Charge_ID, COUNT(C.Payment_Method_ID), SUM(C.Charge_Amount)
	FROM	CHARGES AS C, PAYMENT_METHODS AS PM
		WHERE	C.Payment_Method_ID == PM.Payment_Method_ID
	GROUP BY	PM.Payment_Method_ID
	ORDER BY	COUNT(PM.Payment_Method_ID) * C.Charge_Amount DESC;

/**
3i - Retrieve the name and contact info of the customer who has the highest karma point balance
**/

SELECT	U.User_ID, U.First_Name, U.Last_Name, U.Email, K.Payment_Method_ID, K.Karma_Balance
	FROM	USER AS U, KARMA AS K
		WHERE	U.Buyer_Flag == 0;