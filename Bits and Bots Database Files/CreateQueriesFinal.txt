
CREATE TABLE USER
(	User_ID				INT				NOT NULL,
 	First_Name			VARCHAR(15)		NOT NULL,
 	Last_Name			VARCHAR(15)		NOT NULL,
 	Password			VARCHAR(15)		NOT NULL,
 	Buyer_Flag			TINYINT			NOT NULL,
 	Seller_Flag			TINYINT			NOT NULL,
 	Email				VARCHAR(15)		NOT NULL,
 	CONSTRAINT	UPK
 		PRIMARY KEY(User_ID));

CREATE TABLE IP_ITEM
(	IP_Item_ID			INT				NOT NULL,
	Store_ID			INT				NOT NULL,
	Title				VARCHAR(15)		NOT NULL,
	IP_Description		VARCHAR(15),
	Price				REAL			NOT NULL,
	File_Type			INT				NOT NULL,
	CONSTRAINT IIPK
		PRIMARY KEY(IP_Item_ID),
 	CONSTRAINT IISIFK
 		FOREIGN KEY(Store_ID) REFERENCES VIRTUAL_STORE(Store_ID));


 CREATE TABLE IP_ITEM_IMAGES
 (	Image_ID			INT				NOT NULL,
	IP_Item_ID			INT				NOT NULL,
	Image_Description	VARCHAR(15)		NOT NULL,
	Image_Name			VARCHAR(15)		NOT NULL,
	File_Type			VARCHAR(15)		NOT NULL,
	Upload_Date			DATE			NOT NULL,
	CONSTRAINT IIIPK
  		PRIMARY KEY(Image_ID),
  	CONSTRAINT IIIIIFK
		FOREIGN KEY(IP_Item_ID) REFERENCES VIRTUAL_STORE(IP_Item_ID));

 CREATE TABLE IP_ITEM_KEYWORDS
(	Keyword_ID			INT				NOT NULL,
	IP_Item_ID			INT				NOT NULL,
	Keyword_Name		VARCHAR(15)		NOT NULL,
	Upload_Date			DATE			NOT NULL,
	CONSTRAINT IIKKIPK
 		PRIMARY KEY(Keyword_ID),
	CONSTRAINT IIKIIIFK
 		FOREIGN KEY(IP_Item_ID) REFERENCES IP_ITEM(IP_Item_ID));

CREATE TABLE ITEMS_IN_WISHLIST
(	Wishlist_ID			INT				NOT NULL,
 	IP_Item_ID			INT				NOT NULL DEFAULT 0,
 	CONSTRAINT IIWPK
 		PRIMARY KEY(Wishlist_ID),
 	CONSTRAINT IIWWIFK
 		FOREIGN KEY(Wishlist_ID) REFERENCES WISHLIST(Wishlist_ID)
 			ON DELETE SET DEFAULT	ON UPDATE CASCADE,
 	CONSTRAINT IIWIPFK
 		FOREIGN KEY(IP_Item_ID) REFERENCES IP_ITEM(IP_Item_ID)
 			ON DELETE SET DEFAULT	ON UPDATE CASCADE);

CREATE TABLE WISHLIST
(	Wishlist_ID			INT				NOT NULL,
	User_ID				INT				NOT NULL DEFAULT 0,
	CONSTRAINT WPK
		PRIMARY KEY(Wishlist_ID)
	CONSTRAINT WFK
		FOREIGN KEY(User_ID) REFERENCES USER(User_ID)
			ON DELETE SET DEFAULT	ON UPDATE CASCADE);

 CREATE TABLE ITEM_ADDED_TO_ORDER
(	Order_ID			INT				NOT NULL,
	IP_Item_ID			INT				NOT NULL DEFAULT 0,
	Quantity			INT				NOT NULL,
	CONSTRAINT IATOPK
 		PRIMARY KEY(Order_ID),
	CONSTRAINT IATOOIFK
 		FOREIGN KEY(Order_ID) REFERENCES ITEM_ORDER(Order_ID),
	CONSTRAINT IATOIIIFK
 		FOREIGN KEY(IP_Item_ID) REFERENCES IP_ITEM(IP_Item_ID)
			ON DELETE SET DEFAULT ON UPDATE CASCADE);

CREATE TABLE ITEM_ORDER
(	Order_ID			INT				NOT NULL,
	Order_Date			DATE			NOT NULL,
	Price				REAL			NOT NULL,
	User_ID				INT				NOT NULL,
	CONSTRAINT IOPK
 		PRIMARY KEY(Order_ID),
	CONSTRAINT IOFK
 		FOREIGN KEY(Price) REFERENCES IP_ITEM(Price),
	CONSTRAINT IOUIFK
 		FOREIGN KEY(User_ID) REFERENCES USER(User_ID));

CREATE TABLE IP_ITEM_REVIEWED
(	Review_ID			INT				NOT NULL,
	IP_Item_ID			INT				NOT NULL,
	CONSTRAINT IRPK
		PRIMARY KEY(Review_ID),
	CONSTRAINT IRRIFK
		FOREIGN KEY(Review_ID) REFERENCES REVIEW(Review_ID),
	CONSTRAINT IROIFK
		FOREIGN KEY(IP_Item_ID) REFERENCES IP_ITEM(IP_Item_ID));

CREATE TABLE ORDER_REVIEWED
(	Review_ID			INT				NOT NULL,
	Order_ID			INT				NOT NULL,
	CONSTRAINT IRPK
		PRIMARY KEY(Review_ID),
	CONSTRAINT IRRIFK
		FOREIGN KEY(Review_ID) REFERENCES REVIEW(Review_ID),
	CONSTRAINT IROIFK
		FOREIGN KEY(Order_ID) REFERENCES ITEM_ORDER(Order_ID));

CREATE TABLE REVIEW
(	Review_ID			INT				NOT NULL,
 	Rating				INT				NOT NULL,
 	Description			VARCHAR(2000),
 	IP_Item_ID			INT				NOT NULL DEFAULT 0,
 	User_ID				INT				NOT NULL DEFAULT 0,
 	CONSTRAINT RPK
 		PRIMARY KEY(Review_ID),
 	CONSTRAINT RIPFK
 		FOREIGN KEY(IP_Item_ID) REFERENCES IP_ITEM(IP_Item_ID)
 			ON DELETE SET DEFAULT	ON UPDATE CASCADE,
 	CONSTRAINT RUIFK
 		FOREIGN KEY(User_ID) REFERENCES USER(User_ID)
 			ON DELETE SET DEFAULT	ON UPDATE CASCADE);

CREATE TABLE VIRTUAL_STORE
(	Store_ID			INT				NOT NULL,
	User_ID				INT				NOT NULL,
	Store_Description	VARCHAR(15),
	Store_Banner		VARCHAR(15),
	Name				VARCHAR(15)		NOT NULL,
	Seller_Bio			VARCHAR(15),
	Store_Category		VARCHAR(15),
 	CONSTRAINT VSSIPK
		PRIMARY KEY(Store_ID),
 	CONSTRAINT VSUIFK
		FOREIGN KEY(User_ID) REFERENCES USER(User_ID));
        
CREATE TABLE VIRTUAL_STORE_URLS
(	URL_ID				INT				NOT NULL,
	URL_Name			VARCHAR(15)		NOT NULL,
	URL_Link			VARCHAR(15)		NOT NULL,
	Store_ID			INT				NOT NULL,
	Upload_Date			DATE			NOT NULL,
	CONSTRAINT VSUUIPK
 		PRIMARY KEY(URL_ID),
 	CONSTRAINT VSUSIFK
		FOREIGN KEY(Store_ID) REFERENCES VIRTUAL_STORE(Store_ID));

CREATE TABLE STORE_CATEGORIES
(	Store_Category_ID	INT				NOT NULL,
	Category_Name		VARCHAR(15)		NOT NULL,
	Description			VARCHAR(15),
	Store_ID			INT				NOT NULL,
	CONSTRAINT SCCNPK
 		PRIMARY KEY(Store_Category_ID)
 	CONSTRAINT SCSIFK
 		FOREIGN KEY(Store_ID) REFERENCES VIRTUAL_STORE(Store_ID));

CREATE TABLE CHARGES
(	Charge_ID			INT				NOT NULL,
  	Payment_Method_ID	INT				NOT NULL,
	Charge_Amount		REAL			NOT NULL,
	CONSTRAINT CCIPK
 		PRIMARY KEY(Charge_ID),
	CONSTRAINT CCIFK
		FOREIGN KEY(Charge_ID) REFERENCES PAYMENT_METHODS(Charge_ID),
	CONSTRAINT CPMIFK
		FOREIGN KEY(Payment_Method_ID) REFERENCES PAYMENT_METHODS(Payment_Method_ID));

CREATE TABLE PAYMENT_METHODS
(	Payment_Method_ID	INT				NOT NULL,
	Preferred_Payment	TINYINT			NOT NULL,
	Charge_ID			INT				NOT NULL,
	CONSTRAINT PMPK
		PRIMARY KEY(Payment_Method_ID));

CREATE TABLE BANK_ACCOUNT
(	Payment_Method_ID	INT				NOT NULL,
	Account_Holder_Name	VARCHAR(15)		NOT NULL,
	Account_Number		INT				NOT NULL,
	Charge_ID			INT				NOT NULL,
	User_ID				INT				NOT NULL DEFAULT 0,
	CONSTRAINT BAPK
		PRIMARY KEY(Payment_Method_ID),
 	CONSTRAINT CCCIFK
		FOREIGN KEY(Charge_ID) REFERENCES PAYMENT_METHODS(Charge_ID),
	CONSTRAINT BAUIFK
		FOREIGN KEY(User_ID) references USER(User_ID)
			ON DELETE SET DEFAULT	ON UPDATE CASCADE);

CREATE TABLE CREDIT_CARD
(	Payment_Method_ID	INT				NOT NULL,
	CVV					INT				NOT NULL,
	Card_Number			INT				NOT NULL,
	Cardholder_Name		VARCHAR(15)		NOT NULL,
	Charge_ID			INT				NOT NULL,
	User_ID				INT				NOT NULL,
	CONSTRAINT CCPK
 		PRIMARY KEY(Payment_Method_ID),
 	CONSTRAINT CCCIFK
		FOREIGN KEY(Charge_ID) REFERENCES PAYMENT_METHODS(Charge_ID),
	CONSTRAINT CCUIFK
		FOREIGN KEY(User_ID) REFERENCES USER(User_ID),
	CONSTRAINT CCPMIFK
 		FOREIGN KEY(Payment_Method_ID) REFERENCES PAYMENT_METHODS(Payment_Method_ID)
			ON DELETE SET DEFAULT	ON UPDATE CASCADE);

CREATE TABLE KARMA
(	Payment_Method_ID	INT				NOT NULL,
	Karma_Wallet_ID		INT				NOT NULL,
	Karma_Balance		INT				NOT NULL,
	Charge_ID			INT				NOT NULL,
	User_ID				INT				NOT NULL DEFAULT 0,
	CONSTRAINT KPK
		PRIMARY KEY(Payment_Method_ID),
 	CONSTRAINT CCCIFK
		FOREIGN KEY(Charge_ID) REFERENCES PAYMENT_METHODS(Charge_ID),
	CONSTRAINT KUIFK
		FOREIGN KEY(User_ID) REFERENCES USER(User_ID)
			ON DELETE SET DEFAULT ON UPDATE CASCADE,
	CONSTRAINT KPMIFK
		FOREIGN KEY(Payment_Method_ID) REFERENCES PAYMENT_METHODS(Payment_Method_ID)
			ON DELETE SET DEFAULT ON UPDATE CASCADE);

CREATE TABLE CRYPTO
(	Payment_Method_ID	INT				NOT NULL,
	Crypto_Wallet_ID	INT				NOT NULL,
	Charge_ID			INT				NOT NULL,
	User_ID				INT				NOT NULL,
	CONSTRAINT CPK
		PRIMARY KEY(Payment_Method_ID),
	CONSTRAINT CPMIFK
		FOREIGN KEY(Payment_Method_ID) REFERENCES PAYMENT_METHODS(Payment_Method_ID),
 	CONSTRAINT CCCIFK
		FOREIGN KEY(Charge_ID) REFERENCES PAYMENT_METHODS(Charge_ID),
	CONSTRAINT CUIFK
        FOREIGN KEY(User_ID) REFERENCES USER(User_ID));